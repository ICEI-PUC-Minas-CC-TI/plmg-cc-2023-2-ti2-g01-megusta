CREATE TABLE IF NOT EXISTS anotacao
(
    id uuid NOT NULL,
    mensagem character varying(50) COLLATE pg_catalog."default" NOT NULL,
    cor character varying(10) COLLATE pg_catalog."default" NOT NULL,
    usuario_id uuid NOT NULL,
    CONSTRAINT anotacao_pkey PRIMARY KEY (id),
    CONSTRAINT fk_anotacao_usuario FOREIGN KEY (usuario_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS ingrediente
(
    nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    id uuid NOT NULL,
    imagem bytea NOT NULL,
    nutritionalinfo jsonb NOT NULL,
    categoria character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Ingredient_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ingredienterestricao
(
    ingredient_id uuid NOT NULL,
    restriction_id uuid NOT NULL,
    CONSTRAINT ingredienterestricao_pkey PRIMARY KEY (ingredient_id, restriction_id),
    CONSTRAINT fk_ingredienterestricao_ FOREIGN KEY (restriction_id)
        REFERENCES restricao (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_ingredienterestricao_ingrediente FOREIGN KEY (ingredient_id)
        REFERENCES ingrediente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ingredientesbanidos
(
    user_id uuid NOT NULL,
    ingredient_id uuid NOT NULL,
    CONSTRAINT ingredientesbanidos_pkey PRIMARY KEY (user_id, ingredient_id),
    CONSTRAINT fk_ingredientesbanidos_ingrediente FOREIGN KEY (ingredient_id)
        REFERENCES ingrediente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_ingredientesbanidos_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ingredientesdestacados
(
    user_id uuid NOT NULL,
    ingredient_id uuid NOT NULL,
    CONSTRAINT ingredientesdestacados_pkey PRIMARY KEY (user_id, ingredient_id),
    CONSTRAINT fk_ingredientesdestacados_ingrediente FOREIGN KEY (ingredient_id)
        REFERENCES ingrediente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_ingredientesdestacados_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ingredientesselecionados
(
    user_id uuid NOT NULL,
    ingredient_id uuid NOT NULL,
    CONSTRAINT ingredientesselecionados_pkey PRIMARY KEY (user_id, ingredient_id),
    CONSTRAINT fk_ingredientesselecionados_ingrediente FOREIGN KEY (ingredient_id)
        REFERENCES ingrediente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_ingredientesselecionados_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS receita
(
    id uuid NOT NULL,
    usuario_id uuid NOT NULL,
    titulo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descricao character varying(150) COLLATE pg_catalog."default",
    imagem bytea NOT NULL,
    instrucao character varying(200)[] COLLATE pg_catalog."default" NOT NULL,
    tempopreparo integer NOT NULL,
    porcao character varying(30) COLLATE pg_catalog."default" NOT NULL,
    dificuldade character varying(20) COLLATE pg_catalog."default" NOT NULL,
    custo double precision NOT NULL,
    nutritionalinfo jsonb NOT NULL,
    CONSTRAINT recipe_pkey PRIMARY KEY (id),
    CONSTRAINT fk_receita_usuario FOREIGN KEY (usuario_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS receitaingredientes
(
    recipe_id uuid NOT NULL,
    ingredient_id uuid NOT NULL,
    quantidade integer NOT NULL,
    CONSTRAINT receitaingredientes_pkey PRIMARY KEY (ingredient_id, recipe_id),
    CONSTRAINT fk_receitaingredientes_ingrediente FOREIGN KEY (ingredient_id)
        REFERENCES ingrediente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_receitaingredientes_receita FOREIGN KEY (recipe_id)
        REFERENCES receita (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS receitassalvas
(
    user_id uuid NOT NULL,
    recipe_id uuid NOT NULL,
    CONSTRAINT receitassalvas_pkey PRIMARY KEY (user_id, recipe_id),
    CONSTRAINT fk_receitassalvas_receita FOREIGN KEY (recipe_id)
        REFERENCES receita (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_receitassalvas_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS restricao
(
    id uuid NOT NULL,
    tipo character varying(30) COLLATE pg_catalog."default" NOT NULL,
    nome character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT restricao_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS reviews
(
    user_id uuid NOT NULL,
    recipe_id uuid NOT NULL,
    review integer NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (user_id, recipe_id),
    CONSTRAINT fk_reviews_receita FOREIGN KEY (recipe_id)
        REFERENCES receita (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_reviews_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT reviews_review_check CHECK (review >= 0 AND review <= 10)
);

CREATE TABLE IF NOT EXISTS usuario
(
    id uuid NOT NULL,
    nome character varying(50) COLLATE pg_catalog."default" NOT NULL,
    sobrenome character varying(60) COLLATE pg_catalog."default" NOT NULL,
    usuario character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    idade integer,
    genero "char",
    senha character varying(100) COLLATE pg_catalog."default" NOT NULL,
    permissao "char" NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS usuariorestricao
(
    user_id uuid NOT NULL,
    restriction_id uuid NOT NULL,
    CONSTRAINT usuariorestricao_pkey PRIMARY KEY (user_id, restriction_id),
    CONSTRAINT fk_usuariorestricao_restricao FOREIGN KEY (restriction_id)
        REFERENCES restricao (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT fk_usuariorestricao_usuario FOREIGN KEY (user_id)
        REFERENCES usuario (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

